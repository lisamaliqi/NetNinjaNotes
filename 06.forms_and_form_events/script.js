
//                            SUBMIT EVENTS
const form1 = document.querySelector('.submitEvents .signup-form');
// const username = document.querySelector('#username');

form1.addEventListener('submit', event => {//man kan köra click men om man kör submit så fungerar all typ av submit, även enter i tangentbordet
    event.preventDefault();
    //prevents default action av ett event
    //denna gör så att sidan inte refreshar varje gång man gör en submit

    // console.log(username.value);
    //loggar ut det jag skriver i input delen till consollen

    form1.username;
    //hur man får fields från en form1, man använder sig utav dot-notation
    //man behöver alltså inte göra som rad 4 och rad 11 tillsammans, utan man kan göra detta enskilt
    //när man har dot-notation här så letar js efter ett id som heter username i form
    //dot-notation fungerar inte bara för id, utan fungerar också med name

    console.log(form1.username.value);
    //detta gör exakt samma som rad 11
});

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                            REGEX (regular expressions)

/*
Man matchar ett ord på regEx genom att skriva ex: /ninja/
Detta letar efter ordet ninja i en string oavsett om det är ord innan elr efter samt 
om det är ihop med något annat. 

Hade man istället skrivit /^ninja$/ så kommer det leta efter ifall det BARA 
står ninja i stringen

/^[]$/ detta är en character set, om man skriver ex /^[a-z]$/ så letar det efter en
ENDA bokstav mellan a-z, så skriver man ex h blir de godkänt men skriver man hp 
är det inte godkänt pga det är två bokstäver. detta funger ex inte heller för 
stora bokstäver som H 

/^[a-zA-Z]$/ detta får det att matcha med både stora och små bokstäver

/^[a-zA-Z]{6,10}$/ genom att skriva i {x,y} så väljer man hur många karaktärer man ska 
leta efter, ex här så hade inte "hello" matchat men hade man skrivit "hellooo" så 
hade det matchat

/^[a-zA-Z0-9]{6,10}$/ nu kan man också inkludera siffror mellan 0-9

en punkt . betyder alla karaktärer, allstå även specialkaraktärer
^.{6,10}$ detta hade fungerat att skriva nvs3"=nfs

*/
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                         TESTING REGEX PATTERNS

const form2 = document.querySelector('.regEx .signup-form');

form2.addEventListener('submit', event => {
    event.preventDefault();//tar bort default värdet (refreshar varje gång)
    console.log(form2.username.value);//loggar i consollen vad man skriver i username
});

const firstname = 'lisa';
const lastname = 'maliqi';
const email = 'lisamal4132@gmail.com'

//förvarar REGEX i denna:
const pattern =/[a-z]{6,}/;  
//detta betyder bokstäver mellan a-z samt minst 6 bokstäver, finns inget tak på max

//1. vi skapar en variabel som heter result
//2. vi tar ut pattern variabeln och adderar metoden "test()" för att testa ifall
//   variabeln "firstname" stämmer överens med pattern, alltså har stringen 'lisa'
//   bokstäver mellan a-z och minst 6 bokstäver?
let result = pattern.test(firstname);
let result2 = pattern.test(lastname);
let result3 = pattern.test(email);
//här loggar vi resultatet
console.log(result);//-->false    pga bara 4 bokstäver

console.log(result2);//-->true    pga minst 6 bokstäver bokstäver

console.log(result3);//-->true    pga lisamal finns i stringen, då går det

//hade jag skrivit detta: 
const patternAlone =/^[a-z]{6,}$/;  
let result4 = patternAlone.test(email);
console.log(result4);//-->false   pga får ENDAST vara det man skriver in i patternAlone
let result5 = patternAlone.test(lastname);
console.log(result5);//-->true    pga finns ett ord med minst 6 bokstäver i starten och
//                                slutet av stringen

//simpel if statement för att demonstrera
if (result2) {
    console.log('regex test passed!');//om det är true logga detta
} else {
    console.log('regex failed...');// on det är falskt logga detta
}

//skapar ny variabel
result = email.search(patternAlone);
console.log(result);//-1        detta symboliserar att det är false, 

result = lastname.search(patternAlone);
console.log(result);//0         visar 0 pga visar vilken position den startar i stringen(index)

console.log('------------------------------------');

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                            CREATING AN OBJECT










//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                            CREATING AN OBJECT










//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                            CREATING AN OBJECT










//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                            CREATING AN OBJECT










//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                            CREATING AN OBJECT










//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//                            CREATING AN OBJECT










//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

